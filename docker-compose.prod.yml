version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: trendup-redis
    volumes:
      - redis-data:/data
    restart: always
    command: redis-server --appendonly yes
    networks:
      - trendup-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: trendup-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: always
    networks:
      - trendup-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://3.25.92.137:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service (serves pre-built dist folder)
  frontend:
    image: nginx:alpine
    container_name: trendup-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    restart: always
    networks:
      - trendup-network

networks:
  trendup-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
